datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

generator client {
  provider = "prisma-client-js"
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

model User {
  id              Int          @id @default(autoincrement())
  name            String
  email           String       @unique
  gender          Gender       @default(Male)
  age             Int?
  password        String?
  phone           Int?
  canworkfromhome Boolean?
  departments     Department[]
  shifts          Shift[]
  requests        Request[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @default(now()) @updatedAt
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

model Department {
  id        Int      @id @default(autoincrement())
  name      String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

model Shift {
  id        Int       @id @default(autoincrement())
  starttime DateTime?
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

model Request {
  id        Int      @id @default(autoincrement())
  body      String?
  type      String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

enum Gender {
  Male
  Female
}
